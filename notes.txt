CODEFORCES-DIV2

1)ARRAY_MERGING(875)
2)Leetcode(1358)->string + sliding window + hashtable
3)Longest Harmonic Subsequence - (Leetcode-594)
4)1248. Count Number of Nice Subarrays (BEST EXAMPLE OF SLIDING WINDOW + HASHTABLE)
5)767 Reorganize a string (priority queue + hashmap) 
6)1400 construct k pallindrome strings
7)621 task scheduler - > pending
8)780 reaching points
9)1781. Sum of Beauty of All Substrings
10)https://codeforces.com/problemset/problem/1632/B
11)https://leetcode.com/problems/brick-wall/description/
12)https://leetcode.com/problems/most-frequent-ids/  BASED ON UPDATION OF HASHTABLE AND CHECKING PRIORITY_QUEUE
13)https://leetcode.com/problems/max-chunks-to-make-sorted/description/
14)1509. Minimum Difference Between Largest and Smallest Value in Three Moves
15)1094. Car Pooling
16)2491. Divide Players Into Teams of Equal Skill->based on sorting whenever you need to make pair such that their sums are same apply sorting and 2 pointer at 0 and len-1 idx and chk sum
17)2592. Maximize Greatness of an Array-> based on sorting and logical thinking 2 pointer.
18)1296. Divide Array in Sets of K Consecutive Numbers
19)2542. Maximum Subsequence Score. (priority_queue implementation when we need to maximise both constraints)
20)935. Knight Dialer
21)1010. Pairs of Songs With Total Durations Divisible by 60 (whenever divisible is there and we have to find pair  try to find those remainder whose sum is equal to the number from which we have to divide)
22)2952. Minimum Number of Coins to be Added
23)https://leetcode.com/problems/equal-sum-arrays-with-minimum-number-of-operations/description/ (NOT DONE)
24)2952. Minimum Number of Coins to be Added (NOT DONE)
25)1792 (PENDING)
26)752. Open the Lock (BFS BEST APPROACH GRAPHS)
27)MISSING COIN SUM-CSES
28)https://leetcode.com/problems/maximum-average-pass-ratio/ (NOT DONE)
29)leetcode 1775 (NOT DONE)
30)611. Valid Triangle Number (3 SUM)
31)659. Split Array into Consecutive Subsequences(NEW ALGORITHM + TRAVERSING OVER MAP AND CONCEPT OF VACANCY MAP FOR SUBSEQUENCES IMP )


PROPERTIES OF XOR :-
a^b=c
a^c=b

32)2131. Longest Palindrome by Concatenating Two Letter Words  (good question had to handle several base cases main logic is if every string reverse exists then push it in map and for same word string use the highest odd occuring string and then convert all odd to even and + add even)

if we have k let suppose k=3 and if we have all powers from (1,2^k-1) i.e(1,2,4)  then we can make any value from 1-7. (IMP NOTE)

32) OPTIMAL FLIP (CODECHEF)->(BASED ON SUFFIX AND PREFIX + MATHS + SLIDING WINDOW)
33)1053. Previous Permutation With One Swap  (just for a number(x) you need you find a max smaller number that is smaller than x)
34)B. Optimal Reduction CODEFORCES (https://codeforces.com/problemset/problem/1713/B)  -> (simple approach all the small number of the array should be at the end like 
1 2 3 4 5
1 3 5 4 2
3 5 4 2 1

35)1834. Single-Threaded CPU (BASED ON PRIORITY QUEUE and SORTING)
